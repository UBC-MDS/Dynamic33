---
title: "Vancouver Tree Height Geography Analysis"
author: "DSCI 522, Group 33"
date: "`r Sys.Date()`"
format: pdf
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Vancouver Tree Height Geography Analysis

## Summary

Our group was interested in answering the question, "**Do tree heights vary significantly from neighborhood to neighborhood in Vancouver?**"

We aim to analyze the relationship between tree height distribution and neighborhoods. Specifically, we focus on tree height ranges and their counts in various neighborhoods to determine if tree height is influenced by location.

## Introduction

Urban trees are essential to creating livable cities, offering ecological, aesthetic, and health benefits. They improve air quality, provide shade, support biodiversity, and enhance the overall urban environment. In Vancouver, street trees play a vital role in the cityâ€™s commitment to sustainability. However, the characteristics of these trees, such as their heights, can vary significantly across neighborhoods due to factors like local urban planning, soil quality, and maintenance practices. Understanding these patterns is key to equitable urban forestry management and informed decision-making.

This project explores the relationship between **tree height distribution** and **neighborhoods** in Vancouver. Using data from the [City of Vancouver Open Data Portal](https://opendata.vancouver.ca/explore/dataset/street-trees/information/?disjunctive.species_name&disjunctive.common_name&disjunctive.on_street&disjunctive.neighbourhood_name)

To address this, we analyze the dataset through a combination of:

1.  **Exploratory Data Analysis (EDA):** We use contingency tables and visualizations (heatmaps) to identify patterns in tree height distributions across neighborhoods.

2.  **Statistical Testing:** A Chi-squared test of independence is performed to determine if the observed variations in tree height distributions are statistically significant.

By uncovering these patterns, this analysis contributes to urban forestry strategies that aim to distribute greenery benefits equitably across neighborhoods in Vancouver. The findings could help guide future decisions in tree planting, maintenance, and sustainable urban planning.

\newpage

## Methods and Results

### Loading Required Packages

```{r}
library(tidyverse)
library(janitor)
library(ggplot2)
library(knitr)
library(stringr)
library(testthat)
```

### Data Validation and Loading the Data

In our analysis, we primarily interested in the `NEIGHBOURHOOD_NAME`, `HEIGHT_RANGE`, and `HEIGHT_RANGE_ID` columns. To ensure the data is presented in a ready-for-use manner, we validate these columns by confirming their presence, correct naming, and completeness, maintaining the accuracy and reliability of our statistical results. The specific checks include:

Check for correct data file format:

```{r}
if (str_detect("data/street-trees.csv", "\\.csv$")) {
  print("File format is in the correct format")
  trees <- read_csv2("data/street-trees.csv")
} else {
  stop("File format is not correct. Please make sure the file format is in CSV.")
}
```

Check for correct column names for analysis

```{r}
columns_to_use <- c("NEIGHBOURHOOD_NAME", "HEIGHT_RANGE", "HEIGHT_RANGE_ID")
if (all(columns_to_use %in% colnames(trees))) {
  print("All expected columns exist in the dataframe, with the correct names.")
} else {
  missing_columns <- setdiff(columns_to_use, colnames(data))
  stop(paste("The following expected columns are missing:", paste(missing_columns, collapse = ", ")))
}
```

Check for no empty observations

```{r}
missing_data_check <- trees |>
  summarise(
    NEIGHBOURHOOD_NAME_missing = sum(is.na(NEIGHBOURHOOD_NAME)),
    HEIGHT_RANGE_missing = sum(is.na(HEIGHT_RANGE)),
    HEIGHT_RANGE_ID_missing = sum(is.na(HEIGHT_RANGE_ID))
  )

if (any(missing_data_check > 0)) {
  print("There are missing or empty observations in the columns for use. Please review the data.")
} else {
  print("All specified columns have complete observations with no missing or empty values.")
}
```

Check for missingness not beyond expected threshold\
In our statistical analysis, no missing data is allowed. So if any missing data is detected in your check, the data must be reviewed and corrected before proceeding to the analysis.

Check for data types in each column

```{r}
# Define a helper function to handle messages for expect functions
safe_expect <- function(expect_fn, message) {
  tryCatch(
    {
      expect_fn
      cat(message, "\n")  # Print success message
    },
    error = function(e) {
      stop(e)  # If there's an error, propagate it
    }
  )
}

safe_expect(expect_type(trees$NEIGHBOURHOOD_NAME, "character"), "Congrats! NEIGHBOURHOOD_NAME is the correct type (character).")
safe_expect(expect_type(trees$HEIGHT_RANGE_ID, "double"), "Congrats! HEIGHT_RANGE_ID is the correct type (double).")
safe_expect(expect_type(trees$HEIGHT_RANGE, "character"), "Congrats! HEIGHT_RANGE is the correct type (character).")
```

Check for No duplicate observations\
Based on the data shown, each combination of `NEIGHBOURHOOD_NAME`, `HEIGHT_RANGE_ID`, and `HEIGHT_RANGE` appears consistent with expected categorizations, so there is no need to check for duplicates in these columns.

Check for the correct category levels

```{r}
# Check for unexpected levels in NEIGHBOURHOOD_NAME
if (any(is.na(trees$NEIGHBOURHOOD_NAME))) {
  print("Warning: Missing values found in NEIGHBOURHOOD_NAME")
}
if (length(unique(trees$NEIGHBOURHOOD_NAME)) == 1) {
  print("Warning: NEIGHBOURHOOD_NAME has only one unique value")
}
# Check for consistent HEIGHT_RANGE and HEIGHT_RANGE_ID combinations
unique_combinations <- trees |> distinct(HEIGHT_RANGE, HEIGHT_RANGE_ID)
if (nrow(unique_combinations) != n_distinct(trees$HEIGHT_RANGE)) {
  print("Warning: Inconsistent mappings between HEIGHT_RANGE and HEIGHT_RANGE_ID")
} 
```

Check for the correct category levels

```{r}
# Check for unexpected levels in NEIGHBOURHOOD_NAME
if (any(is.na(trees$NEIGHBOURHOOD_NAME))) {
  print("Warning: Missing values found in NEIGHBOURHOOD_NAME")
}
if (length(unique(trees$NEIGHBOURHOOD_NAME)) == 1) {
  print("Warning: NEIGHBOURHOOD_NAME has only one unique value")
}
# Check for consistent HEIGHT_RANGE and HEIGHT_RANGE_ID combinations
unique_combinations <- trees |> distinct(HEIGHT_RANGE, HEIGHT_RANGE_ID)
if (nrow(unique_combinations) != n_distinct(trees$HEIGHT_RANGE)) {
  print("Warning: Inconsistent mappings between HEIGHT_RANGE and HEIGHT_RANGE_ID")
} 
```

Check for no outlier or anomalous values

```{r}
# Step 1: Count the number of trees (rows) per HEIGHT_RANGE_ID level
height_range_counts <- trees %>%
  group_by(HEIGHT_RANGE_ID) %>%
  summarise(count = n())
height_range_counts

# Step 2: Calculate the IQR and outlier bounds for the counts
iqr <- IQR(height_range_counts$count, na.rm = TRUE)
q1 <- quantile(height_range_counts$count, 0.25, na.rm = TRUE)
q3 <- quantile(height_range_counts$count, 0.75, na.rm = TRUE)
lower_bound <- q1 - 1.5 * iqr
upper_bound <- q3 + 1.5 * iqr
lower_bound
upper_bound

# Step 3: Identify outliers
outliers <- height_range_counts %>%
  filter(count < lower_bound | count > upper_bound)

# Step 4: Check and print outliers
if (nrow(outliers) > 0) {
  print("Outliers detected in HEIGHT_RANGE_ID levels:")
  print(outliers)
} else {
  print("No outliers detected in HEIGHT_RANGE_ID levels.")
}

#  Visualize the counts using a bar plot
library(ggplot2)
ggplot(height_range_counts, aes(x = HEIGHT_RANGE_ID, y = count)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +
  geom_point(data = outliers, aes(x = HEIGHT_RANGE_ID, y = count), color = "red", size = 3) +
  labs(title = "Tree Count per HEIGHT_RANGE_ID Level", x = "HEIGHT_RANGE_ID", y = "Count of Trees") +
  theme_minimal()
```

Check for whether response variable follows expected distribution\
The violin plot below shows the distribution of tree counts across different height ranges. It combines a boxplot and a smoothed density curve. The width of each "violin" indicates how many trees fall into each height range where wider areas mean more trees. It helps to see if certain height ranges have many or few trees and whether there are any unusual patterns or imbalances in the data. This can highlight areas where the data might be incorrect or need further investigation.

```{r}
ggplot(trees, aes(x = "trees", y = HEIGHT_RANGE_ID)) +
  geom_violin(fill = "skyblue", color = "black") +
  labs(title = "Violin Plot of HEIGHT_RANGE_ID", x = "", y = "Height Range ID") +
  theme_minimal() 
```

### Reading the Data

```{r}
head(trees)
```

### Exploratory Data Analysis

The columns of interest are:

1.  `NEIGHBOURHOOD_NAME` (explanatory/treatment variable) - A string representing the neighbourhood the tree is in

2.  Tree height data (the outcome/response variable) is represented in two columns, in different formats:

    1.  `HEIGHT_RANGE` - a string representing tree heights (categorical levels) in buckets of 10ft, e.g. `0' - 10'`, `10' - 20'`, etc.

    2.  `HEIGHT_RANGE_ID` - a numeric column (integers) with levels corresponding to the above strings

First, we should examine the levels of the two available versions of the response categorical variable (height), because we may be able to choose one that will simplify our subsequent analysis.

Based on the data, it looks like there should be a one-to-one correspondence between levels of `HEIGHT_RANGE` and `HEIGHT_RANGE_ID`, but we should confirm this. To do this, we can look at all unique combinations of the two variables. If they properly correspond (there are no issues with the data), we should see only one row for each. We will print the results using `kable()` (from the `knitr` package).

```{r}
unique_combinations <- trees |> 
  distinct(HEIGHT_RANGE, HEIGHT_RANGE_ID) |> 
  arrange(HEIGHT_RANGE_ID)

unique_combinations |>
  kable(caption = "Mapping between tree height category names and their IDs.")
```

It looks like there is a proper correspondence between the levels of these two variables. Since the levels of `HEIGHT_RANGE_ID` are simpler and shorter, we will use this variable. This should make our plots easier to display.

Now we can select only the treatment and response variable columns and convert them to type `factor`, which will allow us to build a contingency table.

```{r}
trees_subset <- trees |> 
  select(NEIGHBOURHOOD_NAME, HEIGHT_RANGE_ID) |> 
  mutate(across(everything(), as.factor))

head(trees_subset)
```

The new `trees_subset` dataframe contains one row per tree, with only the columns `NEIGHBOURHOOD_NAME` and `HEIGHT_RANGE_ID`. We can use this along with the `tabyl()` function from the `janitor` package to generate a contingency table. We will then print the contingency table using `kable()`.

```{r}
cont_table <- trees_subset |> 
  tabyl(NEIGHBOURHOOD_NAME, HEIGHT_RANGE_ID)

cont_table |> 
  kable(caption = "Contingency table showing counts of trees in various levels of the tree height variable per levels of the neighbourhood variable. For a mapping of tree height category names, refer to Table 1.")
```

In order to better understand patterns in this data, we can visualize the above contingency table as a two-dimensional histogram (a.k.a heat map):

```{r}
heatmap_data <- cont_table |> 
  pivot_longer(
    cols = -NEIGHBOURHOOD_NAME,
    names_to = "HEIGHT_RANGE_ID",
    values_to = "Tree_Count"
  ) |> 
  mutate(
    HEIGHT_RANGE_ID = factor(HEIGHT_RANGE_ID,
                             levels = as.character(0:10))
  )
```

```{r, fig.width=8, fig.height=4}
ggplot(heatmap_data, aes(x = HEIGHT_RANGE_ID,
                         y = NEIGHBOURHOOD_NAME,
                         fill = Tree_Count)) +
  geom_tile() +
  scale_fill_gradient(low = "white",
                      high = "blue") +
  labs(
    title = "Figure 1: Tree Height Distribution by Neighbourhood",
    x = "Height Category ID",
    y = "Neighbourhood",
    fill = "Tree Count"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

From the plot, it looks like there may be some differences in tree heights across neighbourhoods. In particular:

-   RENFREW-COLLINGWOOD has, by a large margin, the most trees in the 10â€™ - 20â€™ height category (ID 1)

-   VICTORIA-FRASERVIEW, SUNSET, RENFREW-COLLINGWOOD, KENSINGTON-CEDAR COTTAGE, and HASTINGS-SUNRISE seem to have more trees in the lower height categories (1-4) than other neighbourhoods.

-   SHAUGHNESSY and DOWNTOWN seem to have the tallest trees.

### Statistical Test

Although there are some visually identifiable patterns, we can only determine whether there are statistically significant differences in tree heights per neighbourhood using an appropriate test.

#### Choosing a Test and Significance Level

Because we are dealing with two categorical variables, each with multiple levels, a Chi-squared test of Independence/Homogeneity is appropriate.

The Chi-squared test makes the following assumptions:

1.  The observations are independent.
2.  The expected counts are large enough (greater than 5 is typical).

First, the height measurement of a particular tree does not depend on that of another, so we can assume independence. Second, almost every intersection of the contingency table has counts much larger than 5, with many in the hundreds or thousands.

Because neither of the test's two key assumptions appear to be violated, it is safe to proceed with a Chi-squared test of independence.

Finally, we will choose the standard significance level of $\alpha = 0.05$ as our threshold for determining statistical significance.

#### Performing a Chi-squared Test of Independence

We will perform the test, store the results in `chisq_results`, and display them.

```{r}
chisq_results <- chisq.test(cont_table, correct = FALSE)

chisq_results
```

The Chi-squared test yielded a statistically significant result, with a test statistic of $X^2 = 15339$ and $p < 2.2 \times 10^{-16}$, which is less than our predefined significance level of 0.05.

\newpage

## Discussion

After conducting the analysis, we conclude that tree heights vary significantly across neighborhoods. The Chi-squared test of independence result shows the p-value approximately equal to zero thus is less than our predefined significance level of 0.05. Therefore, we can reject null hypothesis that the two categorical variables are independent (there is no association). This means that there is a statistically significant association between neighborhood and tree height.

This reflects differences in tree density in local urban planning. The EDA plot reveals that the RENFREW-COLLINGWOOD neighborhood stands out with the darkest color, indicating the highest concentration of trees, particularly among the shortest height ranges. Other neighborhoods such as VICTORIA-FRASERVIEW, SUNSET, RENFREW-COLLINGWOOD, KENSINGTON-CEDAR COTTAGE, and HASTINGS-SUNRISE tend to have a greater concentration of trees in the lower height ranges (1-4) than other areas. On the other hand, SHAUGHNESSY and DOWNTOWN are notable for having the tallest trees.

Across neighborhoods, the most common tree height range appears to be between 1 and 3 units (height range ID referring to the specific tree height), indicating that the urban tree population is predominantly composed of younger or medium-sized trees. Taller trees (height range 6-10 units) are scarce or entirely absent in most neighborhoods, which may reflect the challenges posed by urban constraints such as limited space, infrastructure interference, or deliberate pruning practices to control growth.

Tree management patterns vary greatly across neighborhoods. Urban areas like DOWNTOWN and FAIRVIEW exhibit consistently light colors across the height ranges, suggesting limited green spaces for tree planting. Surprisingly, even non-urban neighborhoods such as DUNBAR-SOUTHLANDS and ARBUTUS RIDGE show lighter colors, indicating potential land availability that could be utilized for planting new trees. This points to opportunities for the government or community organizations to prioritize these areas for greening initiatives.

Ecologically, neighborhoods with a higher density of trees, such as RENFREW-COLLINGWOOD, enjoy significant environmental benefits, including improved air quality, better urban cooling effects, and enhanced biodiversity. However, the dominance of trees in the 1-3 height range also suggests that many of these trees are young and might require additional care to ensure healthy growth into taller, mature trees.

Note that we do not have the evidence to state these insights and patterns are statstically significant, as the Chi-squared test does not specify which levels are significantly different.

Overall, the findings emphasize the need for targeted greening initiatives, particularly in urban neighborhoods like DOWNTOWN and FAIRVIEW, where tree coverage is limited. Additionally, fostering the growth of taller trees is crucial across all neighborhoods to promote long-term environmental sustainability. Encouraging the planting and care of taller tree species can help balance the urban ecosystem and create more resilient green spaces in the face of growing urbanization.

### 

## References

-   City of Vancouver Open Data Portal: *Street Trees Dataset*. Available at: <https://opendata.vancouver.ca/explore/dataset/street-trees/information/?disjunctive.species_name&disjunctive.common_name&disjunctive.on_street&disjunctive.neighbourhood_name>

-   Wickham, H., & Grolemund, G. (2016). *R for Data Science: Import, Tidy, Transform, Visualize, and Model Data*. O'Reilly Media.

-   Janitor R Package Documentation. Available at: <https://cran.r-project.org/web/packages/janitor/janitor.pdf>

-   ggplot2 R Package Documentation. Available at: <https://ggplot2.tidyverse.org/>

-   Vancouver Urban Forestry Strategy. (2018). City of Vancouver. Available at: <https://vancouver.ca/parks-recreation-culture/urban-forestry-strategy.aspx>
